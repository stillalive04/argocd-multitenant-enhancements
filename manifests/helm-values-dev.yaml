# Helm Values for Development Environment
# Optimized for development workflows with reduced resource requirements

global:
  environment: development
  domain: dev.example.com
  
# Application Configuration
app:
  name: myapp-dev
  version: latest
  replicas: 2
  
  # Development-friendly settings
  debug: true
  logLevel: debug
  hotReload: true
  
  # Resource limits optimized for development
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# Database Configuration
database:
  host: postgres-dev.default.svc.cluster.local
  port: 5432
  name: myapp_dev
  # Use development database with relaxed settings
  maxConnections: 10
  connectionTimeout: 5s

# Redis Configuration
redis:
  host: redis-dev.default.svc.cluster.local
  port: 6379
  database: 0
  maxConnections: 5

# Service Configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: myapp-dev.example.com
      paths:
        - path: /
          pathType: Prefix
  # No TLS for development
  tls: []

# ConfigMap and Secrets
config:
  # Development configuration
  API_URL: "http://api-dev.example.com"
  FEATURE_FLAGS: "debug=true,new_ui=true"
  LOG_FORMAT: "json"
  
secrets:
  # Development secrets (not for production use)
  DATABASE_PASSWORD: "dev-password"
  API_KEY: "dev-api-key"
  JWT_SECRET: "dev-jwt-secret"

# Autoscaling (disabled for dev)
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

# Monitoring and Observability
monitoring:
  enabled: true
  prometheus:
    enabled: true
    scrapeInterval: 30s
  grafana:
    enabled: true
  jaeger:
    enabled: true
    samplingRate: 1.0  # 100% sampling for development

# Security Context (relaxed for development)
securityContext:
  runAsNonRoot: false
  runAsUser: 1000
  fsGroup: 2000
  allowPrivilegeEscalation: true

podSecurityContext:
  fsGroup: 2000

# Network Policies (disabled for easier development)
networkPolicy:
  enabled: false

# Persistent Volume Claims
persistence:
  enabled: false  # Use ephemeral storage for development

# Development Tools
devtools:
  enabled: true
  debugger:
    enabled: true
    port: 9229
  profiler:
    enabled: true
    port: 6060

# Node Affinity (prefer development nodes)
nodeSelector:
  environment: development

tolerations:
  - key: "development"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

# Pod Disruption Budget (relaxed for development)
podDisruptionBudget:
  enabled: false

# Init Containers
initContainers:
  - name: wait-for-db
    image: busybox:1.35
    command: ['sh', '-c', 'until nc -z postgres-dev.default.svc.cluster.local 5432; do echo waiting for db; sleep 2; done;']

# Additional Labels
labels:
  environment: development
  team: platform
  version: v1.0.0
  
# Annotations
annotations:
  deployment.kubernetes.io/revision: "1"
  argocd.argoproj.io/sync-wave: "1"
